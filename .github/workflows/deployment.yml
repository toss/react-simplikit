name: Deployment

on:
  push:
    branches:
      - develop

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.filter.outputs.changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Check for changes in .ts and .tsx files
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            changed:
              - 'src/**/*.ts'
              - 'src/**/*.tsx'

  deploy:
    runs-on: ubuntu-latest
    needs: check-changes
    if: ${{ needs.check-changes.outputs.changed == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.TOSS_REACTIVE_KIT_GITHUB_ACCESS_TOKEN }}

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Enable Corepack
        run: corepack enable

      - name: Install dependencies
        run: yarn install

      - name: Bump version
        run: yarn version patch

      - name: Publish package
        run: |
          echo "npmAuthToken: \${NPM_TOKEN}" >> .yarnrc.yml
          yarn npm publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_OPTIONS: --max-old-space-size=8192

      - name: Set git username with email
        run: |
          git config user.name "seungrodotlee"
          git config user.email "seungrodotlee@gmail.com"

      - name: Tag version
        run: |
          VERSION=$(jq -r '.version' package.json)
          COMMIT_MESSAGE=$(git log -1 --pretty=%B)
          git tag -a "v$VERSION" -m "$COMMIT_MESSAGE"

      - name: Commit version bump
        run: |
          VERSION=$(jq -r '.version' package.json)
          git add package.json
          git commit -m "bump version to $VERSION"

      - name: Push changes and tags
        run: |
          git push -u origin HEAD --follow-tags --force

  generate-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Enable Corepack
        run: corepack enable

      - name: Get changed files from merged PR
        id: files
        run: |
          MATCHED_NAMES=$(git diff-tree --no-commit-id --name-only -r HEAD | tr "\n" "," | sed 's/,$//')

          echo "names=$MATCHED_NAMES" >> $GITHUB_OUTPUT

      - name: Checkout branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          BRANCH=new-docgen-branch-${{ github.run_id }}
          git checkout -b $BRANCH

      - name: Generate docs
        run: |
          yarn generate-docs ${{ steps.files.outputs.names }}
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

      - name: Commit generated docs
        run: |
          git add .
          git commit -m "Generate docs for ${{ steps.files.outputs.names }}"
          git push origin $BRANCH
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Pull Request
        if: steps.files.outputs.names != ''
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: docs/update-${{ github.run_id }}
          title: 'docs(${{ steps.files.outputs.names }}): auto-generated docs'
          body: 'This PR includes documentation updates for: ${{ steps.files.outputs.names }}'
          author: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          reviewers: seungrodotlee,pumpkiinbell,choi2021
